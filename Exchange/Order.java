package Exchange;


public class Order{

    private final long price;
    private final OrderSide orderSide;
    private final long originalQuantity;
    private long currentQuantity;

    private final String instrument;
    private final String clientID;
    private final long orderID;
    private final long clientOrderID;
    private final OrderType orderType;
    private final String timestamp;




    public Order(String instrument, long orderID, long clientOrderID, String clientID, OrderSide orderSide,
                 long price, int quantity, OrderType orderType, String timestamp){

        this.orderSide = orderSide;
        this.clientID = clientID;
        this.orderID = orderID; // The ID the exchange generates for the order
        this.clientOrderID = clientOrderID; //orderID generated by the client
        this.instrument = instrument;
        this.price = price;
        this.originalQuantity = quantity;
        this.currentQuantity = quantity;
        this.orderType = orderType;
        this.timestamp = timestamp;

    }

    public void decreaseOrderQuantity(long quantity){
        if(quantity > currentQuantity){
            throw new IllegalArgumentException("orderID: " + orderID + " currentQuantity: " + this.currentQuantity +
                    " Decrease by: " + quantity + " cannot be more than current quantity");

        }
        this.currentQuantity -= quantity;
    }

    public void IncreaseOrderQuantity(int quantity){
        this.currentQuantity += currentQuantity;
    }

    public long getPrice() {
        return price;
    }

    public OrderSide getOrderSide() {
        return orderSide;
    }

    public long getOriginalQuantity() {
        return originalQuantity;
    }

    public long getCurrentQuantity() {
        return currentQuantity;
    }

    public long getOrderID() {
        return orderID;
    }

    public String getClientID() {
        return clientID;
    }

    public String getInstrument() {
        return instrument;
    }

    public long getClientOrderID() {
        return clientOrderID;
    }

    public OrderType getOrderType() {
        return orderType;
    }

    public String getTimestamp() {
        return timestamp;
    }


}
